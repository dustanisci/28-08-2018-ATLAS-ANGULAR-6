{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api/api.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/logo/logo.component.ts","webpack:///src/app/components/logo/logo.component.html","webpack:///src/app/components/profit-table/profit-table.component.ts","webpack:///src/app/components/profit-table/profit-table.component.html","webpack:///src/app/components/profit-table/profit-table.service.ts","webpack:///src/app/components/profit-table/translate-table.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiService","http","headers","append","request","Object","map","key","url","setHeaders","get","params","value","post","put","delete","providedIn","AppComponent","menuResponsivoWindow","event","target","innerWidth","opened","window","screen","availWidth","menuResponsivoResize","selector","templateUrl","styleUrls","AppModule","provide","useValue","declarations","imports","providers","bootstrap","FooterComponent","year","Date","getFullYear","HeaderComponent","LogoComponent","ProfitTableComponent","profitsService","displayedColumns","dataSource","profits","Array","getProfits","dataProfits","subscribe","resp","paginator","alert","filterValue","filter","trim","toLowerCase","applyFilter","ProfitTableService","apiService","dutchRangeLabel","page","pageSize","length","Math","max","startIndex","endIndex","min","getDutchPaginatorIntl","paginatorIntl","itemsPerPageLabel","nextPageLabel","previousPageLabel","getRangeLabel","environment","production","endpoints","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpParams, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  private headers: HttpHeaders = new HttpHeaders().append('Content-Type', 'application/json');\r\n  private request: HttpParams = new HttpParams();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private setHeaders(request?): void {\r\n    if (request) {\r\n      this.request = {} as HttpParams;\r\n      Object.keys(request).map(key => {\r\n        this.request.append(key, request[key]);\r\n      });\r\n    }\r\n  }\r\n\r\n  public get(url: string, request?): Observable<any> {\r\n    this.setHeaders(request);\r\n    return this.http.get<any>(url, { headers: this.headers, params: this.request });\r\n  }\r\n\r\n  public post(url: string, value: any, request?): Observable<any> {\r\n    this.setHeaders(request);\r\n    return this.http.post<any>(url, value, { headers: this.headers, params: this.request });\r\n  }\r\n\r\n  public put(url: string, id: any, value: any, request?): Observable<any> {\r\n    this.setHeaders(request);\r\n    return this.http.put(`${url}/${id}`, value, { headers: this.headers, params: this.request });\r\n  }\r\n\r\n  public delete(url: string, id: any, request?): Observable<any> {\r\n    this.setHeaders(request);\r\n    return this.http.delete(`${url}/${id}`, { headers: this.headers, params: this.request });\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  public opened: boolean;\r\n\r\n  constructor() {\r\n    this.menuResponsivoWindow();\r\n  }\r\n\r\n  menuResponsivoResize(event) {\r\n    if (event.target.innerWidth > 768) {\r\n      this.opened = true;\r\n    } else {\r\n      this.opened = false;\r\n    }\r\n  }\r\n\r\n  menuResponsivoWindow() {\r\n    if (window.screen.availWidth > 768) {\r\n      this.opened = true;\r\n    } else {\r\n      this.opened = false;\r\n    }\r\n  }\r\n\r\n}\r\n","<mat-drawer-container autosize>\r\n  <mat-drawer #drawer mode=\"side\" (window:resize)=\"menuResponsivoResize($event)\" [opened]=\"opened\">\r\n    <app-logo></app-logo>\r\n\r\n    <mat-chip-list>\r\n      <div class=\"item\">\r\n        <mat-chip>\r\n          <mat-icon>home</mat-icon> Lucros\r\n        </mat-chip>\r\n      </div>\r\n    </mat-chip-list>\r\n  </mat-drawer>\r\n\r\n  <main>\r\n    <mat-icon class=\"icon-menu\" (click)=\"drawer.toggle()\">menu</mat-icon>\r\n    <app-header></app-header>\r\n    <app-profit-table></app-profit-table>\r\n    <app-footer></app-footer>\r\n  </main>\r\n</mat-drawer-container>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule, MatPaginatorIntl } from '@angular/material/paginator';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { LogoComponent } from './components/logo/logo.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { ProfitTableComponent } from './components/profit-table/profit-table.component';\r\nimport { ProfitTableService } from './components/profit-table/profit-table.service';\r\nimport { getDutchPaginatorIntl } from './components/profit-table/translate-table';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FooterComponent,\r\n    LogoComponent,\r\n    HeaderComponent,\r\n    ProfitTableComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatSidenavModule,\r\n    MatChipsModule,\r\n    MatGridListModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    ProfitTableService, { provide: MatPaginatorIntl, useValue: getDutchPaginatorIntl() }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  public year = new Date().getFullYear();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<footer>\r\n  <div class=\"col\">\r\n    Atlas Quantum @ {{ year }}. All rights reserved\r\n  </div>\r\n  <div class=\"col\">\r\n    <i class=\"fa fa-facebook-square\" aria-hidden=\"true\"></i>\r\n    <i class=\"fa fa-twitter\" aria-hidden=\"true\"></i>\r\n    <i class=\"fa fa-instagram\" aria-hidden=\"true\"></i>\r\n    <i class=\"fa fa-youtube-play\" aria-hidden=\"true\"></i>\r\n  </div>\r\n</footer>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<header>\r\n  <div class=\"align\">\r\n    <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n    <label>Eduardo Stanisci</label>\r\n  </div>\r\n</header>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-logo',\r\n  templateUrl: './logo.component.html',\r\n  styleUrls: ['./logo.component.scss']\r\n})\r\nexport class LogoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<img src=\"./assets/img/logo.png\" />\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Profit } from 'src/app/model/profit';\r\nimport { ProfitTableService } from './profit-table.service';\r\n\r\n@Component({\r\n  selector: 'app-profit-table',\r\n  templateUrl: './profit-table.component.html',\r\n  styleUrls: ['./profit-table.component.scss']\r\n})\r\nexport class ProfitTableComponent implements OnInit {\r\n\r\n  public displayedColumns: string[] = ['data', 'moeda', 'rendimentos', 'porcentagem'];\r\n  public dataSource = new MatTableDataSource<Profit>();\r\n  public profits: Profit[] = new Array<Profit>();\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  public ngOnInit() {\r\n    this.getProfits();\r\n  }\r\n\r\n  constructor(private profitsService: ProfitTableService) { }\r\n\r\n  private getProfits() {\r\n    this.profitsService.dataProfits().subscribe((resp: Profit[]) => {\r\n      this.profits = resp;\r\n      this.dataSource = new MatTableDataSource<Profit>(this.profits);\r\n      this.dataSource.paginator = this.paginator;\r\n    }, () => {\r\n      alert('Não foi possível carregar, tente novamente!');\r\n    });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"topo-sub\">\r\n  <h1>Lucros</h1>\r\n  <h2>Relatório de distribuição de lucro</h2>\r\n\r\n  <div class=\"search\">\r\n    <input type=\"text\" matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Pesquisar\" />\r\n    <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"bloco-table\">\r\n  <h2>Distribuição de lucro (último mês)</h2>\r\n\r\n  <div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\">\r\n\r\n      <ng-container matColumnDef=\"data\">\r\n        <th mat-header-cell *matHeaderCellDef> Data </th>\r\n        <td mat-cell *matCellDef=\"let profit\"> {{profit.dateMoviment | date:\"dd/MM/yy - hh:mm\"}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"moeda\">\r\n        <th mat-header-cell *matHeaderCellDef> Moeda </th>\r\n        <td mat-cell *matCellDef=\"let profit\"> {{profit.coin}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"rendimentos\">\r\n        <th mat-header-cell *matHeaderCellDef> Rendimentos </th>\r\n        <td mat-cell *matCellDef=\"let profit\"> + {{profit.proft}} BTC </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"porcentagem\">\r\n        <th mat-header-cell *matHeaderCellDef> % </th>\r\n        <td mat-cell *matCellDef=\"let profit\"> {{profit.profitPercentage * 0.010 | number: '0.00'}} %</td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from 'src/app/api/api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { endpoints } from 'src/environments/environment';\r\nimport { Profit } from 'src/app/model/profit';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfitTableService {\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  public dataProfits(): Observable<Profit[]> {\r\n    return this.apiService.get(endpoints.profits);\r\n  }\r\n\r\n}\r\n","import { MatPaginatorIntl } from '@angular/material/paginator';\r\n\r\nconst dutchRangeLabel = (page: number, pageSize: number, length: number) => {\r\n  if (length === 0 || pageSize === 0) { return `0 de ${length}`; }\r\n\r\n  length = Math.max(length, 0);\r\n\r\n  const startIndex = page * pageSize;\r\n\r\n  const endIndex = startIndex < length ?\r\n    Math.min(startIndex + pageSize, length) :\r\n    startIndex + pageSize;\r\n\r\n  return `${startIndex + 1} - ${endIndex} de ${length}`;\r\n}\r\n\r\n\r\nexport function getDutchPaginatorIntl() {\r\n  const paginatorIntl = new MatPaginatorIntl();\r\n\r\n  paginatorIntl.itemsPerPageLabel = 'Itens por página:';\r\n  paginatorIntl.nextPageLabel = 'Avançar';\r\n  paginatorIntl.previousPageLabel = 'Voltar';\r\n  paginatorIntl.getRangeLabel = dutchRangeLabel;\r\n\r\n  return paginatorIntl;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\nexport const endpoints = {\r\n  profits: 'https://www.mocky.io/v2/5b2c010d300000100023487a'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}